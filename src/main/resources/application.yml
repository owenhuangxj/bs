server:
  port: 80
logging:
#  config: classpath:log4j2.yml
  config: classpath:log4j2.xml
#logging:
#  level:
#    root: info
#    com.ss.bookstore: debug
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
#    driver-class-name: com.mysql.jdbc.Driver
    # MyBatis对数据库字段类型为 bit、tinyint(1) 时映射为 boolean 类型的处理 ===>>>MyBatis 是不会自动处理该映射，需要修改请求连接添加参数 tinyInt1isBit=false
    url: jdbc:mysql://129.204.70.43:3306/auth?useUnicode=true&useSSL=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&tinyInt1isBit=false
    username: owen
    password: Owen@huang2018
    type: com.alibaba.druid.pool.DruidDataSource
    ################################################################Druid,不配置则启用默认配置################################################################
    druid:
      initial-size: 5 #初始化连接大小
      min-idle: 5 #最小连接池数量
      max-active: 21 #最大连接池数量
      max-wait: 60000 #获取连接时最大等待时间，单位毫秒
      time-between-eviction-runs-millis: 80000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
      validation-query: select 1 from dual #测试连接
      test-while-idle: true  #申请连接的时候检测，建议配置为true，不影响性能，并且保证安全性
      test-on-borrow: false #获取连接时执行检测，生产环境建议关闭，影响性能
      test-on-return: false #归还连接时执行检测，生产环境建议关闭，影响性能
      pool-prepared-statements: false #是否开启PSCache，PSCache对支持游标的数据库性能提升巨大，oracle建议开启，mysql下建议关闭
      max-pool-prepared-statement-per-connection-size: 20 #开启poolPreparedStatements后生效
      # stat：Druid内置提供一个StatFilter,用于统计监控信息。如果需要配置访问页面可以参考，https://github.com/alibaba/druid/wiki/配置_StatViewServlet配置。
      # wall：Druid防御SQL注入攻击的WallFilter就是通过Druid的SQL Parser分析。Druid提供的SQL Parser可以在JDBC层拦截SQL做相应处理，比如说分库分表、审计等。
      # log4j：这个就是日志记录的功能，可以把sql语句打印到log4j供排查问题。
      filters: stat,log4j,wall #配置扩展插件，配置监控统计拦截的filters，去掉后监控界面sql无法统计，常用的插件有=>stat:监控统计  log4j:日志  wall:防御sql注入
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 #通过connectProperties属性来打开mergeSql功能；慢SQL记录
    # 合并多个DruidDataSource的监控数据
    #spring.datasource.useGlobalDataSourceStat=true
#    platform: mysql
#    initialSize: 5
#    minIdle: 5
#    maxActive: 21
#    maxWait: 60000
#    timeBetweenEvictionRunsMillis: 80000
#    minEvictableIdleTimeMillis: 300000
#    validationQuery: select 1 from dual
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    poolPreparedStatements: false
#    filters: stat,log4j,wall
#    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  redis:
    host: 134.175.144.23
    database: 3 #默认为0
    password: crmfoo
#    port: 6379 #默认就是6379
#    timeout: 3600 # 单位是ms
#    pool:
#      max-active: 8 #连接池最大连接数（使用负值表示没有限制）
#      max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制）
#      max-idle: 8 #连接池中的最大空闲连接
#      min-idle: 1 #连接池中的最小空闲连接
  thymeleaf:
    enabled: true
    cache: false
    prefix: classpath:/templates/ #默认就是classpath:/templates/
    suffix: .html #默认就是html
    encoding: UTF-8 #默认就是UTF-8
    mode: HTML
    #    mode: LEGACYHTML5 # 对html5 没有结束标签报错的解决方法，配置成LEGACYHTML5是告诉thymeleaf模板对html5不做严格检查，mode默认值是HTML5,如此配置需要引入nekohtml依赖
    servlet:
      content-type: text/html;charset=utf-8
    #启用内容版本策略 md5
    spring.resources.chain.strategy.content.enabled: true
    #应用于版本策略的模式的逗号分隔列表 默认/**
    spring.resources.chain.strategy.content.paths: /**
mybatis-plus:
  type-aliases-package: com.ss.bookstore.entity
  mapper-locations: classpath*:mybatis/**/*.xml
  global-config:
    refresh: true #是否自动刷新 Mapper 对应的 XML 文件，默认不自动刷新。如果配置了该属性，Mapper 对应的 XML 文件会自动刷新，更改 XML 文件后，无需再次重启工程，由此节省大量时间。
  configuration:
    map-underscore-to-camel-case: true #是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射。注意:此属性在 MyBatis 中原默认值为 false，在 MyBatis-Plus 中，此属性也将用于生成最终的 SQL 的 select body;如果您的数据库命名符合规则无需使用 @TableField 注解指定数据库字段名